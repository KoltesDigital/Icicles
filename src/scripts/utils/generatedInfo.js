define(['assets'], function(assets) {
	var duration = 4 * 60;
	var timeDivisions = 100;

	var distances = [];

	function lerp(a, b, t) {
		return a + (b - a) * t;
	}

	assets.load(function() {
		var totalDistance = 0;
		for (var i = 0, n = duration * timeDivisions; i < n; ++i) {
			distances.push(totalDistance);

			var time = i / timeDivisions;
			var speed = getSpeed(time);
			totalDistance += speed / timeDivisions;
		}
		console.log('Total distance generated by speed curve: %f', totalDistance);
	});

	function getDistance(time) {
		var division = time * timeDivisions;
		var index = Math.floor(division);

		return lerp(distances[index], distances[index + 1], division - index);
	}

	function getSpeed(time) {
		return assets.actions['Speed'].paths['location'][0].evaluate(time);
	}

	function getTime(distance) {
		var a = 0;
		var b = distances.length;
		var c;
		while (b - a > 1) {
			c = Math.floor((a + b) / 2);
			if (distance > distances[c])
				a = c;
			else
				b = c;
		}

		var t = (distance - distances[a]) / (distances[b] - distances[a]);
		return (a + t) / timeDivisions;
	}

	return {
		'getDistance': getDistance,
		'getSpeed': getSpeed,
		'getTime': getTime,
	};
});
